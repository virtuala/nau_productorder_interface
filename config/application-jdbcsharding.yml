
# jdbcsharding分库分表配置
spring.main.allow-bean-definition-overriding: true
spring.shardingsphere:
    #参数配置，显示sql
    props:
        sql:
            show: true
        max:
            connections:
                size:
                    per:
                        query: 50
        check:
            table:
                metadata:
                    enabled: false
    datasource:
        # 给每个数据源取别名
        names: ds0 #,ds1 #多个数据将导致不分库的表报错，需设置不分库的表为 default-data-source-name 为单个数据源
        # 给每个数据源配置数据库连接信息
        ds0:
            type: com.alibaba.druid.pool.DruidDataSource
            driver-class-name: com.mysql.cj.jdbc.Driver
            xurl: jdbc:mysql://127.0.0.1:3306/test1?useUnicode=true&useSSL=false&characterEncoding=utf8&serverTimezone=Asia/Shanghai&allowMultiQueries=true
            url: jdbc:mysql://127.0.0.1:3306/nets_0042_svjfos?useUnicode=true&useSSL=false&characterEncoding=utf8&serverTimezone=Asia/Shanghai&allowMultiQueries=true
            username: root
            password: 123456
            maxPoolSize: 100
            minPoolSize: 5
        ds1:
            type: com.alibaba.druid.pool.DruidDataSource
            driver-class-name: com.mysql.cj.jdbc.Driver
            xurl: jdbc:mysql://127.0.0.1:3306/test2?useUnicode=true&useSSL=false&characterEncoding=utf8&serverTimezone=Asia/Shanghai&allowMultiQueries=true
            url: jdbc:mysql://127.0.0.1:3306/test2?useUnicode=true&useSSL=false&characterEncoding=utf8&serverTimezone=Asia/Shanghai&allowMultiQueries=true
            username: root
            password: 123456
            maxPoolSize: 100
            minPoolSize: 5
    sharding:
        #default-data-source-name: ds0 #
        #库分片策略
        #default-database-strategy:
            #inline:
                #sharding-column: log_id
                #algorithm-expression: ds${log_id % 2}
        #配置分表规则
        tables:
            #逻辑表名，只有在mapper中单句的SQL才可以实现分表
            corenets_netssysconfiginfo:
                #数据节点：数据源$->{0..N}.表名$->{0..N}
                actual-data-nodes: ds0.corenets_netssysconfiginfo_$->{0..1}
                #表分片策略
                table-strategy:
                    inline:
                        sharding-column: scitParid # 分片字段
                        algorithm-expression: corenets_netssysconfiginfo_$->{scitParid}
                #表分片策略
                #table-strategy:
                    # 根据自定义类
                    #standard:
                        #sharding-column: birthday # 分片字段
                        #preciseAlgorithmClassName: com.yex.shardingjdbc.algorithm.BirthdayAlgorithm

            #逻辑表名，只有在mapper中单句的SQL才可以实现分表
            corenets_netsuserinfo:
                #数据节点：数据源$->{0..N}.表名$->{0..N}
                actual-data-nodes: ds0.corenets_netsuserinfo_$->{0..1}
                #表分片策略
                table-strategy:
                    inline:
                        sharding-column: uitType # 分片字段
                        algorithm-expression: corenets_netsuserinfo_$->{uitType}












